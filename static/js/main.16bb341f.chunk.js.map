{"version":3,"sources":["logo.svg","components/Header.js","components/Contents.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","nowDate","Date","className","style","fontSize","format","Contents","useState","confirmedData","setconfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","useEffect","fetchEvents","a","axios","get","res","makeData","data","items","arr","reduce","acc","cur","currentDate","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","fontWeight","width","height","options","plugins","legend","display","position","title","text","maintainAspectRatio","textAlign","href","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16bb341f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport Moment from 'react-moment'\r\n\r\nconst Header = () => {\r\n    const nowDate = new Date();\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>\r\n                코로나바이러스감염증-19(COVID-19) \r\n                <span style={{fontSize: 18}}>(2020/01/01 ~ <Moment format='YYYY/MM/DD'>{nowDate}</Moment>)</span>\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useState, useEffect } from 'react'\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2'\r\nimport axios from 'axios'\r\n\r\nconst Contents = () => {\r\n\r\n    const [confirmedData, setconfirmedData] = useState({})\r\n    const [quarantinedData, setQuarantinedData] = useState({})\r\n    const [comparedData, setComparedData] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchEvents = async () => {\r\n            const res = await axios.get(\"https://api.covid19api.com/total/dayone/country/kr\")\r\n            makeData(res.data)\r\n        }\r\n        const makeData = (items) => {\r\n            const arr = items.reduce((acc, cur) => {\r\n                const currentDate = new Date(cur.Date)\r\n                const year = currentDate.getFullYear();\r\n                const month = currentDate.getMonth();\r\n                const date = currentDate.getDate();\r\n                const confirmed = cur.Confirmed;\r\n                const active = cur.Active;\r\n                const death = cur.Deaths;\r\n                const recovered = cur.Recovered;\r\n\r\n                const findItem = acc.find(a => a.year === year && a.month === month);\r\n\r\n                if(!findItem){\r\n                    acc.push({year, month, date, date, confirmed, active, death, recovered})\r\n                }\r\n                if(findItem && findItem.date < date){\r\n                    findItem.year = year;\r\n                    findItem.month = month;\r\n                    findItem.date = date;\r\n                    findItem.confirmed = confirmed;\r\n                    findItem.active = active;\r\n                    findItem.death = death;\r\n                    findItem.recovered = recovered;\r\n                }\r\n                \r\n                return acc;\r\n            }, [])\r\n\r\n            const labels = arr.map(a => `${a.month+1}월`)\r\n            setconfirmedData({\r\n                labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"국내 누적확진자\",\r\n                        backgroundColor: \"salmon\",\r\n                        fill: true,\r\n                        data: arr.map(a => a.confirmed),\r\n                    },\r\n                ],\r\n            })\r\n            setQuarantinedData({\r\n                labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"월별 격리자 현황\",\r\n                        borderColor: \"teal\",\r\n                        fill: false,\r\n                        data: arr.map(a => a.active)\r\n                    },\r\n                ]\r\n            })\r\n            const last = arr[arr.length - 1]\r\n            setComparedData({\r\n                labels: [\"확진자\", \"격리해제\", \"사망\"],\r\n                datasets: [\r\n                    {\r\n                        backgroundColor: [\"navy\", \"skyblue\", \"gray\"],\r\n                        borderColor: [\"navy\", \"skyblue\", \"gray\"],\r\n                        fill: false,\r\n                        data: [last.confirmed, last.recovered, last.death]\r\n                    },\r\n                ]\r\n            })\r\n        }\r\n\r\n        fetchEvents()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"bar-contents\">\r\n                <p style={{fontSize: 32, fontWeight: 'bold'}}>국내 코로나 현황</p>\r\n                <div className=\"bar\">\r\n                    <Bar data={confirmedData} width={1000} height={400} options={\r\n                        {\r\n                            plugins: {\r\n                            legend: { display: true, position: \"bottom\"},\r\n                            title: { display: true, text: \"누적 확진자 추이\", fontSize:16 }\r\n                            },\r\n                            maintainAspectRatio: false\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"line-contents\">\r\n                <div className=\"line\">\r\n                    <Line data={quarantinedData} width={1000} height={400} options={\r\n                        {\r\n                            plugins: {\r\n                            legend: { display: true, position: \"bottom\"},\r\n                            title: { display: true, text: \"월별 격리자 현황\", fontSize:16 }\r\n                            },\r\n                            maintainAspectRatio: false\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"doughnut-contents\">\r\n                <div className=\"doughnut\">\r\n                    <Doughnut data={comparedData} width={1000} height={400} options={\r\n                        {\r\n                            plugins: {\r\n                            legend: { display: true, position: \"bottom\"},\r\n                            title: { display: true, text: \"누적 확진, 격리 해제, 사망\", fontSize:16 }\r\n                            },\r\n                            maintainAspectRatio: false\r\n                        }\r\n                    }\r\n                    />\r\n                </div>\r\n            </div>\r\n            <p style={{textAlign: \"center\", fontSize: 32, fontWeight: 'bold'}}>코로나 예방 행동수칙</p>\r\n            <div className=\"poster\">\r\n                <div className=\"poster-box\">\r\n                </div>\r\n                <div className=\"mask-box\">\r\n                </div>\r\n            </div>\r\n            <p style={{textAlign: \"center\", fontSize: 32, fontWeight: 'bold'}}>관련 기관</p>\r\n            <div className=\"call\">\r\n                <ul className=\"call-list\">\r\n                    <li>\r\n                        😷\r\n                        <a style={{fontSize: 20, fontWeight: 'bold'}} href=\"https://www.mohw.go.kr/react/popup_200128.html\">\r\n                        국민안심병원 현황\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        😷\r\n                        <a style={{fontSize: 20, fontWeight: 'bold'}} href=\"http://www.mohw.go.kr/react/index.jsp\">\r\n                        보건복지부\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        😷\r\n                        <a style={{fontSize: 20, fontWeight: 'bold'}} href=\"http://www.kdca.go.kr/index.es?sid=a2\">\r\n                        질병관리청\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Contents\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"contacts\">\r\n                <div className=\"contacts-container\">\r\n                    <ul className=\"contacts-list\">\r\n                        <li>EMAIL : thdaudtn93@gmail.com</li>\r\n                        <li>PHONE : 010-2073-0674</li>\r\n                        <li>Copyright &copy; 송명수. All Right Reserved.</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport Contents from './components/Contents'\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Contents />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}